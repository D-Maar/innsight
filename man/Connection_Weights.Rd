% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Connection_Weights.R
\name{Connection_Weights}
\alias{Connection_Weights}
\title{Connection Weights method}
\description{
This function implements the \emph{Connection Weight} method investigated by
Olden et al. (2004) which results in a feature relevance score for each input
variable. The basic idea is to multiply up all path weights for each
possible connection between an input feature and the output and then
calculate the sum over them. Besides, it is a global interpretition method and
independent of the input data. For a neural network with \eqn{3} hidden layers with weight
matrices \eqn{W_1}, \eqn{W_2} and \eqn{W_3} this method results in a simple
matrix multiplication
\deqn{W_1 * W_2 * W_3. }
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{analyzer}}{The analyzer with the stored and torch-converted model.}

\item{\code{channels_first}}{The data format of the result, i.e. channels on
last dimension (\code{FALSE}) or on the first dimension (\code{TRUE}). If the
data has no channels, use the default value \code{TRUE}.}

\item{\code{dtype}}{The type of the data and parameters (either \code{'float'} or \code{'double'}).}

\item{\code{result}}{The methods result as a torch tensor of size (model_in, model_out).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Connection_Weights$new()}}
\item \href{#method-get_result}{\code{Connection_Weights$get_result()}}
\item \href{#method-clone}{\code{Connection_Weights$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection_Weights$new(analyzer, channels_first = TRUE, dtype = "float")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{analyzer}}{The analyzer with the stored and torch-converted model.}

\item{\code{channels_first}}{The data format of the result, i.e. channels on
last dimension (\code{FALSE}) or on the first dimension (\code{TRUE}). If the
data has no channels, use the default value \code{TRUE}.}

\item{\code{dtype}}{The type of the data and parameters (either \code{'float'} or \code{'double'}).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_result"></a>}}
\if{latex}{\out{\hypertarget{method-get_result}{}}}
\subsection{Method \code{get_result()}}{
This function returns the result of the Connection Weights method either as an
array (\code{as_torch = FALSE}) or a torch tensor (\code{as_torch = TRUE}) of
size (model_in, model_out).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection_Weights$get_result(as_torch = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{as_torch}}{Boolean value whether the output is an array or a torch
tensor.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The result of this method.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Connection_Weights$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
