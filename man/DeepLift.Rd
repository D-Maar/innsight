% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DeepLift.R
\name{DeepLift}
\alias{DeepLift}
\title{Deep Learning Important FeaTures (DeepLift) Method}
\description{
This is an implementation of the \emph{Deep Learning Important FeaTures
(DeepLift)} algorithm introduced by Shrikumar et al. (2017). It's a local
method for interpreting a single element \eqn{x} of the dataset concerning
a reference value \eqn{x'} and returns the contribution of each input
feature from the difference of the output (\eqn{y=f(x)}) and reference
output (\eqn{y'=f(x')}) prediction. The basic idea of this method is to
decompose the difference-from-reference prediction with respect to the
input features, i.e.
\deqn{\Delta y = y - y'  = \sum_i C(x_i).}
Compared to \emph{Layer-wise Relevance Propagation} (see \link{LRP}) is the
DeepLIFT method an exact decomposition and not an approximation, so we
get real contributions of the input features to the
difference-from-reference prediction. There are two ways to handle
activation functions: \emph{Rescale-Rule} and \emph{RevealCancel-Rule}.
}
\examples{
# ------------------------- Example 1: Neuralnet ---------------------------
library(neuralnet)
data(iris)

# Train a neural network
nn <- neuralnet((Species == "setosa") ~ Petal.Length + Petal.Width,
  iris,
  linear.output = FALSE,
  hidden = c(3, 2), act.fct = "tanh", rep = 1
)

# Convert the model
converter <- Converter$new(nn)

# Apply DeepLift with rescale-rule and a reference input of the feature
# means
x_ref <- matrix(colMeans(iris[, c(3, 4)]), nrow = 1)
deeplift_rescale <- DeepLift$new(converter, iris[, c(3, 4)], x_ref = x_ref)

# Get the result as a dataframe
deeplift_rescale$get_result(type = "data.frame")

# Plot the result for the first datapoint in the data
plot(deeplift_rescale, data_id = 1)

# ------------------------- Example 2: Keras -------------------------------
library(keras)

data <- array(rnorm(64 * 32 * 32 * 3), dim = c(64, 32, 32, 3))

model <- keras_model_sequential()
model \%>\%
  layer_conv_2d(
    input_shape = c(32, 32, 3), kernel_size = 8, filters = 8,
    activation = "softplus", padding = "valid"
  ) \%>\%
  layer_conv_2d(
    kernel_size = 8, filters = 4, activation = "tanh",
    padding = "same"
  ) \%>\%
  layer_conv_2d(
    kernel_size = 4, filters = 2, activation = "relu",
    padding = "valid"
  ) \%>\%
  layer_flatten() \%>\%
  layer_dense(units = 64, activation = "relu") \%>\%
  layer_dense(units = 16, activation = "relu") \%>\%
  layer_dense(units = 2, activation = "softmax")

# Convert the model
converter <- Converter$new(model)

# Apply the DeepLift method with reveal-cancel rule
deeplift_revcancel <- DeepLift$new(converter, data,
  channels_first = FALSE,
  rule_name = "reveal_cancel"
)

# Plot the result for the first image and both classes
plot(deeplift_revcancel, class_id = 1:2)
}
\references{
A. Shrikumar et al. (2017) \emph{Learning important features through
propagating activation differences.}  ICML 2017, p. 4844-4866
}
\section{Super class}{
\code{\link[innsight:InterpretingMethod]{innsight::InterpretingMethod}} -> \code{DeepLift}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{x_ref}}{The reference input of size (1, dim_in) for the
interpretation.}

\item{\code{rule_name}}{Name of the applied rule to calculate the contributions
for the non-linear part of a Neural Network layer. Either
\code{"rescale"} or \code{"reveal_cancel"}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DeepLift$new()}}
\item \href{#method-clone}{\code{DeepLift$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="innsight" data-topic="InterpretingMethod" data-id="get_result">}\href{../../innsight/html/InterpretingMethod.html#method-get_result}{\code{innsight::InterpretingMethod$get_result()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="innsight" data-topic="InterpretingMethod" data-id="plot">}\href{../../innsight/html/InterpretingMethod.html#method-plot}{\code{innsight::InterpretingMethod$plot()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a new instance of the DeepLift method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DeepLift$new(
  converter,
  data,
  channels_first = TRUE,
  dtype = "float",
  ignore_last_act = TRUE,
  rule_name = "rescale",
  x_ref = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{converter}}{An instance of the R6 class \code{\link{Converter}}.}

\item{\code{data}}{The data for which the contribution scores are to be
calculated. It has to be an array or array-like format of size
(batch_size, dim_in).}

\item{\code{channels_first}}{Set the data format of the given data. Internally
the format \code{channels_first} is used, therefore the format of the given
data is required. Also use the default value \code{TRUE} if no convolutional
layers are used.}

\item{\code{dtype}}{The data type for the calculations. Use either \code{'float'}
(default) or \code{'double'}.}

\item{\code{ignore_last_act}}{Set this boolean value to include the last
activation, or not (default: \code{TRUE}). In some cases, the last activation
leads to a saturation problem.}

\item{\code{rule_name}}{Name of the applied rule to calculate the
contributions. Use one of \code{'rescale'} and \code{'reveal_cancel'}.}

\item{\code{x_ref}}{The reference input of size (1, dim_in) for the
interpretation. With the default value \code{NULL} you use an input
of zeros.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DeepLift$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
