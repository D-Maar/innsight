% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Gradients.R
\name{plot.Gradient}
\alias{plot.Gradient}
\title{Plot function for Gradient results}
\usage{
\method{plot}{Gradient}(x, rank = FALSE, scale = FALSE, ...)
}
\arguments{
\item{x}{A result of the \code{\link{Gradient}} or \code{\link{SmoothGrad}}
method.}

\item{rank}{If \code{TRUE}, gradient values are ranked.}

\item{scale}{Scale the gradient values to the centered 90\% of the calculated
values.}

\item{...}{Other arguments passed on to methods. Not currently used.}
}
\value{
Returns a ggplot2 plot object.
}
\description{
Plots the results of the \code{\link{Gradient}} or
\code{\link{SmoothGrad}} method.
}
\examples{
library(neuralnet)
nn <- neuralnet( Species ~ .,
                 iris, linear.output = FALSE,
                 hidden = c(10,8), act.fct = "tanh", rep = 1, threshold = 0.5)
# create an analyzer for this model
analyzer = Analyzer$new(nn)

# calculate contribution scores for the whole dataset and all classes
result <- Gradient(analyzer, data = iris[,-5])

# plot the results
plot(result)

# plot the results with ranked relevances
plot(result, rank = TRUE)

# cut the lower and upper 5\% of the data and plot the result
plot(result, scale = TRUE)

# you can also use the SmoothGrad method
result <- SmoothGrad(analyzer, data = iris[,-5])
plot(result, scale = TRUE)

}
\seealso{
\link{Gradient}, \link{SmoothGrad}
}
