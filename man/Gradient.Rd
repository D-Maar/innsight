% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Gradients.R
\name{Gradient}
\alias{Gradient}
\title{Calculate the Gradient}
\usage{
Gradient(analyzer, data, times_input = FALSE, ignore_last_act = TRUE)
}
\arguments{
\item{analyzer}{An instance of the R6 class \code{\link{Analyzer}}.}

\item{data}{Either a matrix or a data frame, where each row must describe an
input to the network.}

\item{times_input}{Multiplies the gradients with the input features. This
method is called 'Gradient x Inputs'.}

\item{ignore_last_act}{Calculate the gradients of the output or the preactivation
of the output (default: \code{TRUE}).}
}
\value{
Returns an array of size \emph{(dim_in, dim_out, num_data)} which
contains the gradients for each input variable to the
output predictions for each element in the given data.
}
\description{
This method computes the gradients of the outputs with respect to the input
variables, i.e. for all input variable \eqn{i} and output class \eqn{j}
\deqn{d f(x)_j / d x_i.}
}
\examples{
library(neuralnet)
nn <- neuralnet( Species ~ .,
                 iris, linear.output = FALSE,
                 hidden = c(10,8), act.fct = "tanh", rep = 1, threshold = 0.5)
# create an analyzer for this model
analyzer = Analyzer$new(nn)

# calculate gradients for the whole dataset
Gradient(analyzer, data = iris[,-5])

}
